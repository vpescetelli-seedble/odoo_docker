services:

  # Odoo Staging
  odoo_staging:
    build:
      context: ./srcs/staging/odoo
      dockerfile: Dockerfile
      args:
        ODOO_VERSION: 18.0 # Usato dal .env relativo
    env_file:
      - ./srcs/staging/odoo/.env
    volumes:
      - ./data/staging/odoo:/var/lib/odoo
      - ./addons/staging:/mnt/extra-addons
    depends_on:
      db_staging:
        condition: service_healthy
    networks:
      - staging

  db_staging:
    image: postgres:14
    container_name: db_staging
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo_password
      POSTGRES_DB: postgres
    volumes:
      - db_staging_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - staging

  nginx_staging:
    build: 
      context: ./srcs/staging/nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80" # Porta per reverse proxy senza SSL
      - "8443:443" # Porta per reverse proxy con SSL (se abilitato)
    depends_on:
      - odoo_staging
    networks:
      - staging


  # Odoo Production
  odoo_production:
    build:
      context: ./srcs/prod/odoo
      dockerfile: Dockerfile
      args:
        ODOO_VERSION: 18.0 # Usato dal .env relativo
    env_file:
      - ./srcs/prod/odoo/.env
    volumes:
      - ./data/prod/odoo:/var/lib/odoo
      - ./addons/prod:/mnt/extra-addons
    depends_on:
      db_production:
        condition: service_healthy
    networks:
      - prod

  db_production:
    image: postgres:14
    container_name: db_production
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo_password
      POSTGRES_DB: postgres
    volumes:
      - db_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - prod

  nginx_production:
    build:
      context: ./srcs/prod/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80" # Porta per reverse proxy senza SSL
      - "443:443" # Porta per reverse proxy con SSL (se abilitato)
    depends_on:
      - odoo_production
    networks:
      - prod


  # Monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./srcs/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./srcs/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./srcs/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      - prod
      - staging
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./srcs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - prod
      - staging

  nginx_prod_prometheus_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_prod_prometheus_exporter
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri=http://nginx_production:80/nginx_status
    depends_on:
      - nginx_production
    networks:
      - prod

  nginx_staging_prometheus_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_staging_prometheus_exporter
    ports:
      - "9114:9113"
    command:
      - -nginx.scrape-uri=http://nginx_staging:8080/nginx_status
    depends_on:
      - nginx_staging
    networks:
      - staging

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8081:8080"
    networks:
      - prod
      - staging

  postgres_exporter_prod:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter_prod
    environment:
      DATA_SOURCE_NAME: "postgresql://odoo:odoo_password@db_production:5432/postgres?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - prod

  postgres_exporter_staging:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter_staging
    environment:
      DATA_SOURCE_NAME: "postgresql://odoo:odoo_password@db_staging:5432/postgres?sslmode=disable"
    ports:
      - "9188:9187"
    networks:
      - staging

networks:
  prod:
    driver: bridge
    name: prod_network # Nome specifico per facilitare la gestione
  staging:
    driver: bridge
    name: staging_network # Nome specifico per facilitare la gestione


volumes:
  odoo_prod_data:
  odoo_staging_data:
  db_prod_data:
  db_staging_data:
  grafana_data:
  prometheus_data: